# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ACm_-x2ijQqt2f9uSy_bHa4sNLwaIGT_
"""

import time
import board
import adafruit_dht
import RPi.GPIO as GPIO
from datetime import datetime
import requests
import paho.mqtt.client as mqtt
import paho.mqtt.client as mqtt

GPIO.setmode(GPIO.BCM)
GPIO.setup(11,GPIO.OUT)

Broker = "mqtt3.thingspeak.com"
Port = 1883
CHANNEL_ID = "2818357"
w_key = "V1G5E19OORN7CQRX"
URL = "https://api.thingspeak.com/update?"
CLIENT_ID = "Gj06LhUqGDkyISwxLyAzFCg"
USERNAME = "Gj06LhUqGDkyISwxLyAzFCg"
PASSWORD = "oc0mhbhvDWp6O+C5W8NJ3x9S"
Topic = f"channels/{CHANNEL_ID}/subscribe/fields/{FIELD}"
FIELD = "field2"
sensor11 = adafruit_dht.DHT11(board.D4)

def sensor_write():
        try:
                humidity = sensor11.humidity
		temperature = sensor11.temperature
        except RuntimeError as error:
                print(error.args[0])
                time.sleep(0.5)
        load = { "api_key":w_key, "field1": temperature,  "field2": humidity}
        r = requests.post(URL, data = load)
        if r.status_code==200:
                print("written successfully")
        else:
                print("writing failed")

def on_connect(client, userdata, flags, rc):
        if rc == 0:
                print("Connected to to the broker")
                client.subscribe(Topic)
        else:
                print(f"connection failed {rc}")

def on_message(client, userdata, msg):
        try:
                humidity_v = int(msg.load.decode())
                print(f"Recieved message: {humidity_v}")
                if humidity_v<50:
                        GPIO.output(11, GPIO.HIGH)
                else:
                        GPIO.output(11, GPIO.LOW)
        except ValueError:
                print("wrong input")


client = mqtt.Client(client_id=CLIENT_ID)
client.username_pw_set(USERNAME, PASSWORD)
client.on_connect = on_connect
client.on_message = on_message
client.connect(Broker, Port, 60)

while True:
        sensor_write()
        client.loop()